# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .mime_type import MimeType
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class BlobStorageReference(UniversalBaseModel):
    """
    +label=Blob Storage Reference
    +usage=A reference to content offloaded to blob storage
    +docs=Defines the structure for blob storage content references, including type, path, and mime_type
    """

    type: typing.Literal["blob-storage"] = pydantic.Field(default="blob-storage")
    """
    +value=blob-storage
    """

    path: str = pydantic.Field()
    """
    +label=Path
    +usage=Path to the content in blob storage
    """

    mime_type: MimeType = pydantic.Field()
    """
    +label=MIME Type
    +usage=MIME type of the content
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
