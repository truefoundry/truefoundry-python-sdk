# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class MetricsGetChartsRequestFilterEntity(str, enum.Enum):
    APPLICATION = "application"
    POD = "pod"
    JOB_RUN = "job-run"
    EVENT = "event"
    CLUSTER = "cluster"

    def visit(
        self,
        application: typing.Callable[[], T_Result],
        pod: typing.Callable[[], T_Result],
        job_run: typing.Callable[[], T_Result],
        event: typing.Callable[[], T_Result],
        cluster: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is MetricsGetChartsRequestFilterEntity.APPLICATION:
            return application()
        if self is MetricsGetChartsRequestFilterEntity.POD:
            return pod()
        if self is MetricsGetChartsRequestFilterEntity.JOB_RUN:
            return job_run()
        if self is MetricsGetChartsRequestFilterEntity.EVENT:
            return event()
        if self is MetricsGetChartsRequestFilterEntity.CLUSTER:
            return cluster()
