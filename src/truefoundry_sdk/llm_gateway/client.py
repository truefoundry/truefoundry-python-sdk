# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from ..types.guardrail_meters_response_dto import GuardrailMetersResponseDto
from ..types.guardrail_metrics_charts_response_dto import GuardrailMetricsChartsResponseDto
from ..types.guardrail_metrics_filters_response_dto import GuardrailMetricsFiltersResponseDto
from ..types.mcp_meters_response_dto import McpMetersResponseDto
from ..types.mcp_metrics_charts_response_dto import McpMetricsChartsResponseDto
from ..types.mcp_metrics_filters_response_dto import McpMetricsFiltersResponseDto
from ..types.metadata_item import MetadataItem
from .raw_client import AsyncRawLlmGatewayClient, RawLlmGatewayClient
from .types.guardrail_meters_request_dto_filters_value import GuardrailMetersRequestDtoFiltersValue
from .types.guardrail_metrics_charts_data_request_dto_chart_name import GuardrailMetricsChartsDataRequestDtoChartName
from .types.guardrail_metrics_charts_data_request_dto_filters_value import (
    GuardrailMetricsChartsDataRequestDtoFiltersValue,
)
from .types.mcp_meters_request_dto_filters_value import McpMetersRequestDtoFiltersValue
from .types.mcp_meters_request_dto_page import McpMetersRequestDtoPage
from .types.mcp_metrics_charts_data_request_dto_chart_name import McpMetricsChartsDataRequestDtoChartName
from .types.mcp_metrics_charts_data_request_dto_filters_value import McpMetricsChartsDataRequestDtoFiltersValue
from .types.svc_mcp_metrics_get_mcp_metrics_charts_request_page import SvcMcpMetricsGetMcpMetricsChartsRequestPage
from .types.svc_mcp_metrics_get_mcp_metrics_filters_request_page import SvcMcpMetricsGetMcpMetricsFiltersRequestPage

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class LlmGatewayClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawLlmGatewayClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawLlmGatewayClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawLlmGatewayClient
        """
        return self._raw_client

    def svc_metrics_get_llm_playground_tables(
        self,
        *,
        start_ts: typing.Optional[str] = OMIT,
        end_ts: typing.Optional[str] = OMIT,
        model_names: typing.Optional[typing.Sequence[str]] = OMIT,
        usernames: typing.Optional[typing.Sequence[str]] = OMIT,
        metadata: typing.Optional[typing.Sequence[MetadataItem]] = OMIT,
        utc_offset_seconds: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        Parameters
        ----------
        start_ts : typing.Optional[str]
            Start Timestamp in milliseconds

        end_ts : typing.Optional[str]
            End Timestamp in milliseconds

        model_names : typing.Optional[typing.Sequence[str]]
            Model Names

        usernames : typing.Optional[typing.Sequence[str]]
            Usernames

        metadata : typing.Optional[typing.Sequence[MetadataItem]]

        utc_offset_seconds : typing.Optional[str]
            UTC Offset in seconds

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from truefoundry_sdk import TrueFoundry

        client = TrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )
        client.llm_gateway.svc_metrics_get_llm_playground_tables()
        """
        _response = self._raw_client.svc_metrics_get_llm_playground_tables(
            start_ts=start_ts,
            end_ts=end_ts,
            model_names=model_names,
            usernames=usernames,
            metadata=metadata,
            utc_offset_seconds=utc_offset_seconds,
            request_options=request_options,
        )
        return _response.data

    def svc_inference_request_get_filter_type_and_label_values(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> None:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from truefoundry_sdk import TrueFoundry

        client = TrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )
        client.llm_gateway.svc_inference_request_get_filter_type_and_label_values()
        """
        _response = self._raw_client.svc_inference_request_get_filter_type_and_label_values(
            request_options=request_options
        )
        return _response.data

    def svc_mcp_metrics_get_mcp_metrics_charts(
        self,
        *,
        page: SvcMcpMetricsGetMcpMetricsChartsRequestPage,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> McpMetricsChartsResponseDto:
        """
        Retrieves available MCP metrics charts.

        Parameters
        ----------
        page : SvcMcpMetricsGetMcpMetricsChartsRequestPage
            Page type. Possible values: "mcpserver" or "tool"

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        McpMetricsChartsResponseDto
            Available MCP metrics charts

        Examples
        --------
        from truefoundry_sdk import TrueFoundry
        from truefoundry_sdk.llm_gateway import (
            SvcMcpMetricsGetMcpMetricsChartsRequestPage,
        )

        client = TrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )
        client.llm_gateway.svc_mcp_metrics_get_mcp_metrics_charts(
            page=SvcMcpMetricsGetMcpMetricsChartsRequestPage.MCPSERVER,
        )
        """
        _response = self._raw_client.svc_mcp_metrics_get_mcp_metrics_charts(page=page, request_options=request_options)
        return _response.data

    def svc_mcp_metrics_get_mcp_metrics_filters(
        self,
        *,
        start_time: int,
        end_time: int,
        page: SvcMcpMetricsGetMcpMetricsFiltersRequestPage,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> McpMetricsFiltersResponseDto:
        """
        Retrieves available MCP metrics filters.

        Parameters
        ----------
        start_time : int
            Start time in epoch seconds (e.g., 1710201609)

        end_time : int
            End time in epoch seconds (e.g., 1710202200)

        page : SvcMcpMetricsGetMcpMetricsFiltersRequestPage
            Page type. Possible values: "mcpserver" or "tool"

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        McpMetricsFiltersResponseDto
            Available MCP metrics filters

        Examples
        --------
        from truefoundry_sdk import TrueFoundry
        from truefoundry_sdk.llm_gateway import (
            SvcMcpMetricsGetMcpMetricsFiltersRequestPage,
        )

        client = TrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )
        client.llm_gateway.svc_mcp_metrics_get_mcp_metrics_filters(
            start_time=1710201609,
            end_time=1710202200,
            page=SvcMcpMetricsGetMcpMetricsFiltersRequestPage.MCPSERVER,
        )
        """
        _response = self._raw_client.svc_mcp_metrics_get_mcp_metrics_filters(
            start_time=start_time, end_time=end_time, page=page, request_options=request_options
        )
        return _response.data

    def svc_mcp_metrics_get_mcp_meters(
        self,
        *,
        page: McpMetersRequestDtoPage,
        start_time: typing.Optional[int] = OMIT,
        end_time: typing.Optional[int] = OMIT,
        filters: typing.Optional[typing.Dict[str, McpMetersRequestDtoFiltersValue]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> McpMetersResponseDto:
        """
        Retrieves aggregated MCP metrics data.

        Parameters
        ----------
        page : McpMetersRequestDtoPage
            Page type. Possible values: "mcpserver" or "tool"

        start_time : typing.Optional[int]
            Start time in epoch seconds (e.g., 1710201609)

        end_time : typing.Optional[int]
            End time in epoch seconds (e.g., 1710202200)

        filters : typing.Optional[typing.Dict[str, McpMetersRequestDtoFiltersValue]]
            Map of filterName â†’ filter object

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        McpMetersResponseDto
            Aggregated MCP metrics data

        Examples
        --------
        from truefoundry_sdk import TrueFoundry
        from truefoundry_sdk.llm_gateway import McpMetersRequestDtoPage

        client = TrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )
        client.llm_gateway.svc_mcp_metrics_get_mcp_meters(
            page=McpMetersRequestDtoPage.MCPSERVER,
        )
        """
        _response = self._raw_client.svc_mcp_metrics_get_mcp_meters(
            page=page, start_time=start_time, end_time=end_time, filters=filters, request_options=request_options
        )
        return _response.data

    def svc_mcp_metrics_get_mcp_metrics_charts_data(
        self,
        *,
        start_time: int,
        end_time: int,
        chart_name: McpMetricsChartsDataRequestDtoChartName,
        filters: typing.Optional[typing.Dict[str, McpMetricsChartsDataRequestDtoFiltersValue]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        Retrieves available MCP metrics charts.

        Parameters
        ----------
        start_time : int
            Start time in epoch seconds (e.g., 1710201609)

        end_time : int
            End time in epoch seconds (e.g., 1710202200)

        chart_name : McpMetricsChartsDataRequestDtoChartName
            Chart name

        filters : typing.Optional[typing.Dict[str, McpMetricsChartsDataRequestDtoFiltersValue]]
            Map of filterName â†’ filter object

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from truefoundry_sdk import TrueFoundry
        from truefoundry_sdk.llm_gateway import McpMetricsChartsDataRequestDtoChartName

        client = TrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )
        client.llm_gateway.svc_mcp_metrics_get_mcp_metrics_charts_data(
            start_time=1710201609,
            end_time=1710202200,
            chart_name=McpMetricsChartsDataRequestDtoChartName.RATE_OF_REQUESTS_PER_MCP_SERVER,
        )
        """
        _response = self._raw_client.svc_mcp_metrics_get_mcp_metrics_charts_data(
            start_time=start_time,
            end_time=end_time,
            chart_name=chart_name,
            filters=filters,
            request_options=request_options,
        )
        return _response.data

    def svc_guardrail_metrics_get_guardrail_metrics_charts(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> GuardrailMetricsChartsResponseDto:
        """
        Retrieves available Guardrail metrics charts.

        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        GuardrailMetricsChartsResponseDto
            Available Guardrail metrics charts

        Examples
        --------
        from truefoundry_sdk import TrueFoundry

        client = TrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )
        client.llm_gateway.svc_guardrail_metrics_get_guardrail_metrics_charts()
        """
        _response = self._raw_client.svc_guardrail_metrics_get_guardrail_metrics_charts(request_options=request_options)
        return _response.data

    def svc_guardrail_metrics_get_guardrail_metrics_filters(
        self, *, start_time: int, end_time: int, request_options: typing.Optional[RequestOptions] = None
    ) -> GuardrailMetricsFiltersResponseDto:
        """
        Retrieves available Guardrail metrics filters.

        Parameters
        ----------
        start_time : int
            Start time in epoch seconds (e.g., 1710201609)

        end_time : int
            End time in epoch seconds (e.g., 1710202200)

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        GuardrailMetricsFiltersResponseDto
            Available Guardrail metrics filters

        Examples
        --------
        from truefoundry_sdk import TrueFoundry

        client = TrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )
        client.llm_gateway.svc_guardrail_metrics_get_guardrail_metrics_filters(
            start_time=1710201609,
            end_time=1710202200,
        )
        """
        _response = self._raw_client.svc_guardrail_metrics_get_guardrail_metrics_filters(
            start_time=start_time, end_time=end_time, request_options=request_options
        )
        return _response.data

    def svc_guardrail_metrics_get_guardrail_meters(
        self,
        *,
        start_time: typing.Optional[int] = OMIT,
        end_time: typing.Optional[int] = OMIT,
        filters: typing.Optional[typing.Dict[str, GuardrailMetersRequestDtoFiltersValue]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> GuardrailMetersResponseDto:
        """
        Retrieves aggregated Guardrail metrics data.

        Parameters
        ----------
        start_time : typing.Optional[int]
            Start time in epoch seconds (e.g., 1710201609)

        end_time : typing.Optional[int]
            End time in epoch seconds (e.g., 1710202200)

        filters : typing.Optional[typing.Dict[str, GuardrailMetersRequestDtoFiltersValue]]
            Map of filterName â†’ filter object

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        GuardrailMetersResponseDto
            Aggregated Guardrail metrics data

        Examples
        --------
        from truefoundry_sdk import TrueFoundry

        client = TrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )
        client.llm_gateway.svc_guardrail_metrics_get_guardrail_meters()
        """
        _response = self._raw_client.svc_guardrail_metrics_get_guardrail_meters(
            start_time=start_time, end_time=end_time, filters=filters, request_options=request_options
        )
        return _response.data

    def svc_guardrail_metrics_get_guardrail_metrics_charts_data(
        self,
        *,
        start_time: int,
        end_time: int,
        chart_name: GuardrailMetricsChartsDataRequestDtoChartName,
        filters: typing.Optional[typing.Dict[str, GuardrailMetricsChartsDataRequestDtoFiltersValue]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        Retrieves Guardrail metrics charts data.

        Parameters
        ----------
        start_time : int
            Start time in epoch seconds (e.g., 1710201609)

        end_time : int
            End time in epoch seconds (e.g., 1710202200)

        chart_name : GuardrailMetricsChartsDataRequestDtoChartName
            Chart name

        filters : typing.Optional[typing.Dict[str, GuardrailMetricsChartsDataRequestDtoFiltersValue]]
            Map of filterName â†’ filter object

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from truefoundry_sdk import TrueFoundry
        from truefoundry_sdk.llm_gateway import (
            GuardrailMetricsChartsDataRequestDtoChartName,
        )

        client = TrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )
        client.llm_gateway.svc_guardrail_metrics_get_guardrail_metrics_charts_data(
            start_time=1710201609,
            end_time=1710202200,
            chart_name=GuardrailMetricsChartsDataRequestDtoChartName.RATE_OF_REQUESTS_PER_GUARDRAIL,
        )
        """
        _response = self._raw_client.svc_guardrail_metrics_get_guardrail_metrics_charts_data(
            start_time=start_time,
            end_time=end_time,
            chart_name=chart_name,
            filters=filters,
            request_options=request_options,
        )
        return _response.data


class AsyncLlmGatewayClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawLlmGatewayClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawLlmGatewayClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawLlmGatewayClient
        """
        return self._raw_client

    async def svc_metrics_get_llm_playground_tables(
        self,
        *,
        start_ts: typing.Optional[str] = OMIT,
        end_ts: typing.Optional[str] = OMIT,
        model_names: typing.Optional[typing.Sequence[str]] = OMIT,
        usernames: typing.Optional[typing.Sequence[str]] = OMIT,
        metadata: typing.Optional[typing.Sequence[MetadataItem]] = OMIT,
        utc_offset_seconds: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        Parameters
        ----------
        start_ts : typing.Optional[str]
            Start Timestamp in milliseconds

        end_ts : typing.Optional[str]
            End Timestamp in milliseconds

        model_names : typing.Optional[typing.Sequence[str]]
            Model Names

        usernames : typing.Optional[typing.Sequence[str]]
            Usernames

        metadata : typing.Optional[typing.Sequence[MetadataItem]]

        utc_offset_seconds : typing.Optional[str]
            UTC Offset in seconds

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from truefoundry_sdk import AsyncTrueFoundry

        client = AsyncTrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.llm_gateway.svc_metrics_get_llm_playground_tables()


        asyncio.run(main())
        """
        _response = await self._raw_client.svc_metrics_get_llm_playground_tables(
            start_ts=start_ts,
            end_ts=end_ts,
            model_names=model_names,
            usernames=usernames,
            metadata=metadata,
            utc_offset_seconds=utc_offset_seconds,
            request_options=request_options,
        )
        return _response.data

    async def svc_inference_request_get_filter_type_and_label_values(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> None:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from truefoundry_sdk import AsyncTrueFoundry

        client = AsyncTrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.llm_gateway.svc_inference_request_get_filter_type_and_label_values()


        asyncio.run(main())
        """
        _response = await self._raw_client.svc_inference_request_get_filter_type_and_label_values(
            request_options=request_options
        )
        return _response.data

    async def svc_mcp_metrics_get_mcp_metrics_charts(
        self,
        *,
        page: SvcMcpMetricsGetMcpMetricsChartsRequestPage,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> McpMetricsChartsResponseDto:
        """
        Retrieves available MCP metrics charts.

        Parameters
        ----------
        page : SvcMcpMetricsGetMcpMetricsChartsRequestPage
            Page type. Possible values: "mcpserver" or "tool"

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        McpMetricsChartsResponseDto
            Available MCP metrics charts

        Examples
        --------
        import asyncio

        from truefoundry_sdk import AsyncTrueFoundry
        from truefoundry_sdk.llm_gateway import (
            SvcMcpMetricsGetMcpMetricsChartsRequestPage,
        )

        client = AsyncTrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.llm_gateway.svc_mcp_metrics_get_mcp_metrics_charts(
                page=SvcMcpMetricsGetMcpMetricsChartsRequestPage.MCPSERVER,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.svc_mcp_metrics_get_mcp_metrics_charts(
            page=page, request_options=request_options
        )
        return _response.data

    async def svc_mcp_metrics_get_mcp_metrics_filters(
        self,
        *,
        start_time: int,
        end_time: int,
        page: SvcMcpMetricsGetMcpMetricsFiltersRequestPage,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> McpMetricsFiltersResponseDto:
        """
        Retrieves available MCP metrics filters.

        Parameters
        ----------
        start_time : int
            Start time in epoch seconds (e.g., 1710201609)

        end_time : int
            End time in epoch seconds (e.g., 1710202200)

        page : SvcMcpMetricsGetMcpMetricsFiltersRequestPage
            Page type. Possible values: "mcpserver" or "tool"

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        McpMetricsFiltersResponseDto
            Available MCP metrics filters

        Examples
        --------
        import asyncio

        from truefoundry_sdk import AsyncTrueFoundry
        from truefoundry_sdk.llm_gateway import (
            SvcMcpMetricsGetMcpMetricsFiltersRequestPage,
        )

        client = AsyncTrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.llm_gateway.svc_mcp_metrics_get_mcp_metrics_filters(
                start_time=1710201609,
                end_time=1710202200,
                page=SvcMcpMetricsGetMcpMetricsFiltersRequestPage.MCPSERVER,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.svc_mcp_metrics_get_mcp_metrics_filters(
            start_time=start_time, end_time=end_time, page=page, request_options=request_options
        )
        return _response.data

    async def svc_mcp_metrics_get_mcp_meters(
        self,
        *,
        page: McpMetersRequestDtoPage,
        start_time: typing.Optional[int] = OMIT,
        end_time: typing.Optional[int] = OMIT,
        filters: typing.Optional[typing.Dict[str, McpMetersRequestDtoFiltersValue]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> McpMetersResponseDto:
        """
        Retrieves aggregated MCP metrics data.

        Parameters
        ----------
        page : McpMetersRequestDtoPage
            Page type. Possible values: "mcpserver" or "tool"

        start_time : typing.Optional[int]
            Start time in epoch seconds (e.g., 1710201609)

        end_time : typing.Optional[int]
            End time in epoch seconds (e.g., 1710202200)

        filters : typing.Optional[typing.Dict[str, McpMetersRequestDtoFiltersValue]]
            Map of filterName â†’ filter object

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        McpMetersResponseDto
            Aggregated MCP metrics data

        Examples
        --------
        import asyncio

        from truefoundry_sdk import AsyncTrueFoundry
        from truefoundry_sdk.llm_gateway import McpMetersRequestDtoPage

        client = AsyncTrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.llm_gateway.svc_mcp_metrics_get_mcp_meters(
                page=McpMetersRequestDtoPage.MCPSERVER,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.svc_mcp_metrics_get_mcp_meters(
            page=page, start_time=start_time, end_time=end_time, filters=filters, request_options=request_options
        )
        return _response.data

    async def svc_mcp_metrics_get_mcp_metrics_charts_data(
        self,
        *,
        start_time: int,
        end_time: int,
        chart_name: McpMetricsChartsDataRequestDtoChartName,
        filters: typing.Optional[typing.Dict[str, McpMetricsChartsDataRequestDtoFiltersValue]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        Retrieves available MCP metrics charts.

        Parameters
        ----------
        start_time : int
            Start time in epoch seconds (e.g., 1710201609)

        end_time : int
            End time in epoch seconds (e.g., 1710202200)

        chart_name : McpMetricsChartsDataRequestDtoChartName
            Chart name

        filters : typing.Optional[typing.Dict[str, McpMetricsChartsDataRequestDtoFiltersValue]]
            Map of filterName â†’ filter object

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from truefoundry_sdk import AsyncTrueFoundry
        from truefoundry_sdk.llm_gateway import McpMetricsChartsDataRequestDtoChartName

        client = AsyncTrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.llm_gateway.svc_mcp_metrics_get_mcp_metrics_charts_data(
                start_time=1710201609,
                end_time=1710202200,
                chart_name=McpMetricsChartsDataRequestDtoChartName.RATE_OF_REQUESTS_PER_MCP_SERVER,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.svc_mcp_metrics_get_mcp_metrics_charts_data(
            start_time=start_time,
            end_time=end_time,
            chart_name=chart_name,
            filters=filters,
            request_options=request_options,
        )
        return _response.data

    async def svc_guardrail_metrics_get_guardrail_metrics_charts(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> GuardrailMetricsChartsResponseDto:
        """
        Retrieves available Guardrail metrics charts.

        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        GuardrailMetricsChartsResponseDto
            Available Guardrail metrics charts

        Examples
        --------
        import asyncio

        from truefoundry_sdk import AsyncTrueFoundry

        client = AsyncTrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.llm_gateway.svc_guardrail_metrics_get_guardrail_metrics_charts()


        asyncio.run(main())
        """
        _response = await self._raw_client.svc_guardrail_metrics_get_guardrail_metrics_charts(
            request_options=request_options
        )
        return _response.data

    async def svc_guardrail_metrics_get_guardrail_metrics_filters(
        self, *, start_time: int, end_time: int, request_options: typing.Optional[RequestOptions] = None
    ) -> GuardrailMetricsFiltersResponseDto:
        """
        Retrieves available Guardrail metrics filters.

        Parameters
        ----------
        start_time : int
            Start time in epoch seconds (e.g., 1710201609)

        end_time : int
            End time in epoch seconds (e.g., 1710202200)

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        GuardrailMetricsFiltersResponseDto
            Available Guardrail metrics filters

        Examples
        --------
        import asyncio

        from truefoundry_sdk import AsyncTrueFoundry

        client = AsyncTrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.llm_gateway.svc_guardrail_metrics_get_guardrail_metrics_filters(
                start_time=1710201609,
                end_time=1710202200,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.svc_guardrail_metrics_get_guardrail_metrics_filters(
            start_time=start_time, end_time=end_time, request_options=request_options
        )
        return _response.data

    async def svc_guardrail_metrics_get_guardrail_meters(
        self,
        *,
        start_time: typing.Optional[int] = OMIT,
        end_time: typing.Optional[int] = OMIT,
        filters: typing.Optional[typing.Dict[str, GuardrailMetersRequestDtoFiltersValue]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> GuardrailMetersResponseDto:
        """
        Retrieves aggregated Guardrail metrics data.

        Parameters
        ----------
        start_time : typing.Optional[int]
            Start time in epoch seconds (e.g., 1710201609)

        end_time : typing.Optional[int]
            End time in epoch seconds (e.g., 1710202200)

        filters : typing.Optional[typing.Dict[str, GuardrailMetersRequestDtoFiltersValue]]
            Map of filterName â†’ filter object

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        GuardrailMetersResponseDto
            Aggregated Guardrail metrics data

        Examples
        --------
        import asyncio

        from truefoundry_sdk import AsyncTrueFoundry

        client = AsyncTrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.llm_gateway.svc_guardrail_metrics_get_guardrail_meters()


        asyncio.run(main())
        """
        _response = await self._raw_client.svc_guardrail_metrics_get_guardrail_meters(
            start_time=start_time, end_time=end_time, filters=filters, request_options=request_options
        )
        return _response.data

    async def svc_guardrail_metrics_get_guardrail_metrics_charts_data(
        self,
        *,
        start_time: int,
        end_time: int,
        chart_name: GuardrailMetricsChartsDataRequestDtoChartName,
        filters: typing.Optional[typing.Dict[str, GuardrailMetricsChartsDataRequestDtoFiltersValue]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        Retrieves Guardrail metrics charts data.

        Parameters
        ----------
        start_time : int
            Start time in epoch seconds (e.g., 1710201609)

        end_time : int
            End time in epoch seconds (e.g., 1710202200)

        chart_name : GuardrailMetricsChartsDataRequestDtoChartName
            Chart name

        filters : typing.Optional[typing.Dict[str, GuardrailMetricsChartsDataRequestDtoFiltersValue]]
            Map of filterName â†’ filter object

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from truefoundry_sdk import AsyncTrueFoundry
        from truefoundry_sdk.llm_gateway import (
            GuardrailMetricsChartsDataRequestDtoChartName,
        )

        client = AsyncTrueFoundry(
            api_key="YOUR_API_KEY",
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.llm_gateway.svc_guardrail_metrics_get_guardrail_metrics_charts_data(
                start_time=1710201609,
                end_time=1710202200,
                chart_name=GuardrailMetricsChartsDataRequestDtoChartName.RATE_OF_REQUESTS_PER_GUARDRAIL,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.svc_guardrail_metrics_get_guardrail_metrics_charts_data(
            start_time=start_time,
            end_time=end_time,
            chart_name=chart_name,
            filters=filters,
            request_options=request_options,
        )
        return _response.data
