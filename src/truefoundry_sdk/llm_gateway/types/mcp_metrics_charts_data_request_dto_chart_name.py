# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class McpMetricsChartsDataRequestDtoChartName(str, enum.Enum):
    """
    Chart name
    """

    RATE_OF_REQUESTS_PER_MCP_SERVER = "rateOfRequestsPerMcpServer"
    LATENCY_PER_MCP_SERVER = "latencyPerMcpServer"
    MCP_SERVER_ERRORS = "mcpServerErrors"
    RATE_OF_REQUESTS_PER_TOOL = "rateOfRequestsPerTool"
    LATENCY_PER_TOOL = "latencyPerTool"
    TOOL_ERRORS = "toolErrors"
    LATENCY_SUMMARY_PER_TOOL = "latencySummaryPerTool"
    REQUESTS_PER_TOOL = "requestsPerTool"

    def visit(
        self,
        rate_of_requests_per_mcp_server: typing.Callable[[], T_Result],
        latency_per_mcp_server: typing.Callable[[], T_Result],
        mcp_server_errors: typing.Callable[[], T_Result],
        rate_of_requests_per_tool: typing.Callable[[], T_Result],
        latency_per_tool: typing.Callable[[], T_Result],
        tool_errors: typing.Callable[[], T_Result],
        latency_summary_per_tool: typing.Callable[[], T_Result],
        requests_per_tool: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is McpMetricsChartsDataRequestDtoChartName.RATE_OF_REQUESTS_PER_MCP_SERVER:
            return rate_of_requests_per_mcp_server()
        if self is McpMetricsChartsDataRequestDtoChartName.LATENCY_PER_MCP_SERVER:
            return latency_per_mcp_server()
        if self is McpMetricsChartsDataRequestDtoChartName.MCP_SERVER_ERRORS:
            return mcp_server_errors()
        if self is McpMetricsChartsDataRequestDtoChartName.RATE_OF_REQUESTS_PER_TOOL:
            return rate_of_requests_per_tool()
        if self is McpMetricsChartsDataRequestDtoChartName.LATENCY_PER_TOOL:
            return latency_per_tool()
        if self is McpMetricsChartsDataRequestDtoChartName.TOOL_ERRORS:
            return tool_errors()
        if self is McpMetricsChartsDataRequestDtoChartName.LATENCY_SUMMARY_PER_TOOL:
            return latency_summary_per_tool()
        if self is McpMetricsChartsDataRequestDtoChartName.REQUESTS_PER_TOOL:
            return requests_per_tool()
