# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class NvidiaTimeSlicingGpuInfo(UniversalBaseModel):
    total_timeslices_per_gpu: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="totalTimeslicesPerGpu")
    ] = None
    single_gpu_memory_mb: typing_extensions.Annotated[int, FieldMetadata(alias="singleGpuMemoryMB")]
    nvidia_device_plugin_config: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="nvidiaDevicePluginConfig")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
