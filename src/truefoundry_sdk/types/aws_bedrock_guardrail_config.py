# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from .aws_bedrock_guardrail_config_auth_data import AwsBedrockGuardrailConfigAuthData
from .aws_region import AwsRegion
from .base_guardrail_config import BaseGuardrailConfig


class AwsBedrockGuardrailConfig(BaseGuardrailConfig):
    """
    +label=AWS Bedrock Guardrail Config
    +icon=aws-bedrock
    """

    type: typing.Optional[typing.Literal["integration/guardrail-config/aws-bedrock"]] = pydantic.Field(default=None)
    """
    +value=integration/guardrail-config/aws-bedrock
    """

    auth_data: typing.Optional[AwsBedrockGuardrailConfigAuthData] = pydantic.Field(default=None)
    """
    +label=AWS Account Auth Data
    +usage=Authentication data for the AWS account
    """

    region: typing.Optional[AwsRegion] = None
    guardrail_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    +label=Guardrail ID
    +usage=The ID of the Guardrail to use.
    """

    guardrail_version: typing.Optional[str] = pydantic.Field(default=None)
    """
    +label=Guardrail Version
    +usage=The version of the Guardrail to use.
    """

    redact_pii: typing.Optional[bool] = pydantic.Field(default=None)
    """
    +label=Redact PII
    +usage=Whether to redact PII from the response. If this is true, your request will be transformed to redact PII from the response else a validation error will be returned.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
