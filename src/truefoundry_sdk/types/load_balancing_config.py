# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .load_balancing_rule import LoadBalancingRule


class LoadBalancingConfig(UniversalBaseModel):
    """
    Load Balancing Configuration
    """

    name: str = pydantic.Field()
    """
    Name of the load balancing configuration
    """

    type: typing.Literal["gateway-load-balancing-config"] = pydantic.Field(default="gateway-load-balancing-config")
    """
    +value=gateway-load-balancing-config
    +sort=2
    """

    rules: typing.List[LoadBalancingRule] = pydantic.Field()
    """
    List of load balancing rules
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
