# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class Method(str, enum.Enum):
    """
    HTTP Method for the tool call HTTP request
    """

    GET = "get"
    POST = "post"
    PUT = "put"
    DELETE = "delete"
    PATCH = "patch"

    def visit(
        self,
        get: typing.Callable[[], T_Result],
        post: typing.Callable[[], T_Result],
        put: typing.Callable[[], T_Result],
        delete: typing.Callable[[], T_Result],
        patch: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is Method.GET:
            return get()
        if self is Method.POST:
            return post()
        if self is Method.PUT:
            return put()
        if self is Method.DELETE:
            return delete()
        if self is Method.PATCH:
            return patch()
