# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from ..core.serialization import FieldMetadata
from .i_change_operation import IChangeOperation


class IChange(UniversalBaseModel):
    type: IChangeOperation
    key: str
    value: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    old_value: typing_extensions.Annotated[
        typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]], FieldMetadata(alias="oldValue")
    ] = None
    changes: typing.Optional[typing.List["IChange"]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow


update_forward_refs(IChange)
