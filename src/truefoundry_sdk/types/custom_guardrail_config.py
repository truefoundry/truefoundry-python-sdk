# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from .base_guardrail_config import BaseGuardrailConfig
from .custom_guardrail_config_auth_data import CustomGuardrailConfigAuthData


class CustomGuardrailConfig(BaseGuardrailConfig):
    """
    +label=Custom Guardrail Config
    +icon=puzzle-piece
    """

    type: typing.Optional[typing.Literal["integration/guardrail-config/custom"]] = pydantic.Field(default=None)
    """
    +value=integration/guardrail-config/custom
    """

    url: typing.Optional[str] = pydantic.Field(default=None)
    """
    +label=URL
    +usage=The URL of the Guardrail to send a post request to.
    """

    auth_data: typing.Optional[CustomGuardrailConfigAuthData] = pydantic.Field(default=None)
    """
    +label=Auth Data
    +usage=Authentication data for the Guardrail Server.
    """

    headers: typing.Optional[typing.Dict[str, str]] = pydantic.Field(default=None)
    """
    +label=Headers
    +usage=Headers for the Guardrail Server. Forwarded to the Guardrail Server as is. For example: `{"Authorization": "APIKey <token>"}`
    """

    redact_pii: typing.Optional[bool] = pydantic.Field(default=None)
    """
    +label=Redact PII
    +usage=Whether to redact PII from the response. If this is true, your request will be transformed to redact PII from the response else a validation error will be returned.
    """

    config: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    +label=Config
    +usage=The config for the Guardrail Server. This is a JSON object that will be sent as a config to Guardrail Server along with the request.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
