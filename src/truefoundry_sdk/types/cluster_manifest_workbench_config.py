# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .notebook_config import NotebookConfig
from .ssh_server_config import SshServerConfig
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ClusterManifestWorkbenchConfig(UniversalBaseModel):
    """
    +label=Workbench Config
    +sort=70
    """

    notebook_config: typing.Optional[NotebookConfig] = None
    ssh_server_config: typing.Optional[SshServerConfig] = None
    default_storage_class: typing.Optional[str] = pydantic.Field(default=None)
    """
    +label=Default Storage Class
    +usage=The default storage class for the home directory of workbench
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
