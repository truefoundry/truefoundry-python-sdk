# This file was auto-generated by Fern from our API Definition.

from .base_workbench_input import BaseWorkbenchInput
import typing
import pydantic
from .workbench_image import WorkbenchImage
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Notebook(BaseWorkbenchInput):
    """
    +docs=Describes the configuration for the service
    """

    type: typing.Optional[typing.Literal["notebook"]] = pydantic.Field(default=None)
    """
    +value=notebook
    """

    image: typing.Optional[WorkbenchImage] = None
    cull_timeout: typing.Optional[int] = pydantic.Field(default=None)
    """
    +label=Stop after (minutes of inactivity)
    +usage=Stop the notebook instance after this much time in minutes of inactivity.
    The notebook instance will be stopped even if the notebook is open in your browser, but nothing is running on the notebook.
    +sort=5
    +uiProps={"descriptionInline":true}
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
