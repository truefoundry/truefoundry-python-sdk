# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class BaseArtifactVersion(UniversalBaseModel):
    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    +sort=1
    +label=Name
    +message=The name should start with lowercase alphabets  and can contain alphanumeric and can include '-' in between
    +usage=Name of the entity
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    +sort=2
    +label=Description
    """

    metadata: typing.Dict[str, typing.Optional[typing.Any]] = pydantic.Field()
    """
    +sort=50000
    +label=Metadata
    +usage=Key value metadata. Should be valid JSON. For e.g. `{"business-unit": "sales", "quality": "good", "rating": 4.5}`
    +uiType=JsonInput
    +uiProps={"descriptionInline":true}
    """

    version_alias: typing.Optional[str] = pydantic.Field(default=None)
    """
    +sort=51000
    +label=Version Alias
    +usage=Version alias is alternate, ideally human readable, version string to reference an artifact version. It should start with `v` followed by alphanumeric and it can include `.` and `-` in between (e.g. `v1.0.0`, `v1-prod`, `v3-dev`, etc)
    +message=The version alias should start with `v` followed by alphanumeric and can include `.` and `-` in between (e.g. `v1.0.0`, `v1-prod`, `v3-dev`, etc)
    +uiProps={"descriptionInline":true}
    +placeholder=v1.0.0
    """

    ml_repo: typing.Optional[str] = pydantic.Field(default=None)
    """
    +label=ML Repo
    +usage=Name of the ML Repo
    +uiType=Hidden
    """

    version: typing.Optional[int] = pydantic.Field(default=None)
    """
    +label=Version of the entity
    +usage=Version of the entity
    +uiType=Hidden
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
