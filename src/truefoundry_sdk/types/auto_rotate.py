# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class AutoRotate(UniversalBaseModel):
    auto_rotate_period: int = pydantic.Field(default=30)
    """
    +label=Auto Rotate Period
    +usage=Auto Rotate Period in days after which the token will be rotated. Minimum value is 30.
    """

    grace_period: int = pydantic.Field(default=1)
    """
    +label=Grace Period
    +usage=Grace Period in days for which the token will be valid after auto rotate period. Minimum value is 1.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
