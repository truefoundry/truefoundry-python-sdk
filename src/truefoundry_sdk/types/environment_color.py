# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class EnvironmentColor(UniversalBaseModel):
    color_hex: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="colorHex")] = None
    background_color_hex: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="backgroundColorHex")
    ] = None
    color: typing.Optional[str] = None
    background_color: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="backgroundColor")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
