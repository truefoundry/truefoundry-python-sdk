# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .rate_limit_unit import RateLimitUnit
from .rate_limit_when import RateLimitWhen


class RateLimitRule(UniversalBaseModel):
    """
    +label=Rate Limit Rule
    """

    id: str = pydantic.Field()
    """
    +usage=Unique identifier for the rule
    +uiProps={"descriptionInline":true}
    +sort=1
    +label=Rule ID
    """

    when: RateLimitWhen
    limit_to: int = pydantic.Field()
    """
    +usage=Maximum number of requests or tokens allowed
    +uiProps={"descriptionInline":true}
    +sort=3
    +label=Limit Value
    """

    unit: RateLimitUnit

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
