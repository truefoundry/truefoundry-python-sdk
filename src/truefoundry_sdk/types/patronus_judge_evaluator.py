# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .patronus_judge_criteria import PatronusJudgeCriteria


class PatronusJudgeEvaluator(UniversalBaseModel):
    type: typing.Literal["judge"] = pydantic.Field(default="judge")
    """
    +label=Evaluator Type
    +usage=The type of the evaluator to use for the Patronus Guardrail.
    +sort=100
    """

    criteria: PatronusJudgeCriteria

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
