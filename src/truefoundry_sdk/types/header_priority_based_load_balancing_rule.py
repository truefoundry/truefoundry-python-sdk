# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .priority_based_load_balance_target import PriorityBasedLoadBalanceTarget


class HeaderPriorityBasedLoadBalancingRule(UniversalBaseModel):
    load_balance_targets: typing.List[PriorityBasedLoadBalanceTarget] = pydantic.Field()
    """
    List of targets for priority-based load balancing
    """

    type: typing.Literal["priority-based-routing"] = "priority-based-routing"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
