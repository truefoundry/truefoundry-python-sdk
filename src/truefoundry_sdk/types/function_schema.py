# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class FunctionSchema(UniversalBaseModel):
    """
    Schema defining a function for tool calls
    """

    name: str = pydantic.Field()
    """
    Name of the function
    """

    description: str = pydantic.Field()
    """
    Description of the function
    """

    parameters: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Parameters schema for the function
    """

    strict: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Indicates if the function should be called strictly
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
