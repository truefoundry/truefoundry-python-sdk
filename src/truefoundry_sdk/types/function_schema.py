# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class FunctionSchema(UniversalBaseModel):
    """
    +label=Function Schema
    +usage=Schema defining a function for tool calls
    """

    name: str = pydantic.Field()
    """
    +label=Function Name
    +usage=Name of the function
    """

    description: str = pydantic.Field()
    """
    +label=Description
    +usage=Description of the function
    """

    parameters: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    +label=Parameters
    +usage=Parameters schema for the function
    +uiType=JsonInput
    +uiProps={"descriptionInline":true}
    """

    strict: bool = pydantic.Field(default=False)
    """
    +label=Strict
    +usage=Indicates if the function should be called strictly
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
