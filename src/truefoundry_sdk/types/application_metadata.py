# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import typing_extensions
from ..core.serialization import FieldMetadata
from .migration import Migration
import datetime as dt
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ApplicationMetadata(UniversalBaseModel):
    type: typing.Optional[str] = None
    synced_by: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="syncedBy")] = None
    argo_source_workspace: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="argoSourceWorkspace")
    ] = None
    release_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="releaseName")] = None
    infra_component_name: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="infraComponentName")
    ] = None
    auto_update: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="autoUpdate")] = None
    migrations: typing.Optional[typing.List[Migration]] = None
    health_status: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="healthStatus")] = None
    paused: typing.Optional[bool] = None
    deleting_state_timestamp: typing_extensions.Annotated[
        typing.Optional[dt.datetime], FieldMetadata(alias="deletingStateTimestamp")
    ] = pydantic.Field(default=None)
    """
    Timestamp when lifecycle stage was set to DELETING
    """

    deletion_failed_state_timestamp: typing_extensions.Annotated[
        typing.Optional[dt.datetime],
        FieldMetadata(alias="deletionFailedStateTimestamp"),
    ] = pydantic.Field(default=None)
    """
    Timestamp when lifecycle stage was set to DELETION_FAILED
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
