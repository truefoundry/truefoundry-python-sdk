# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .fallback_model import FallbackModel
from .fallback_when import FallbackWhen


class FallbackRule(UniversalBaseModel):
    """
    Fallback Rule
    """

    id: str = pydantic.Field()
    """
    Unique identifier for the rule
    """

    when: FallbackWhen
    fallback_models: typing.List[FallbackModel] = pydantic.Field()
    """
    List of fallback models to try in sequence
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
