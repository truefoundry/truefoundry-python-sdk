# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class BasicAuthCreds(UniversalBaseModel):
    """
    +label=Username and password
    """

    type: typing.Literal["basic_auth"] = pydantic.Field(default="basic_auth")
    """
    +value=basic_auth
    """

    username: str = pydantic.Field()
    """
    +label=Username for service auth
    +message=Username for the user to authenticate with
    +sort=1
    """

    password: str = pydantic.Field()
    """
    +label=Password for service auth
    +message=Password for the user to authenticate with
    +sort=2
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
