# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class AwsInferentia(UniversalBaseModel):
    type: typing.Literal["aws_inferentia"] = pydantic.Field(default="aws_inferentia")
    """
    +value=aws_inferentia
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    +label=Inferentia accelerator name
    +usage=Name of the AWS Inferentia Accccelerator. One of [INF1, INF2].
    This field is required for Node Selector and can be ignored in Nodepool Selector.
    """

    count: int = pydantic.Field()
    """
    +label=Count
    +usage=Count of Inferentia accelerator chips to provide to the application
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
