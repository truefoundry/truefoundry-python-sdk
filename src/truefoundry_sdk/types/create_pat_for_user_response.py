# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class CreatePatForUserResponse(UniversalBaseModel):
    token: str = pydantic.Field()
    """
    Personal Access Token
    """

    user_email: typing_extensions.Annotated[str, FieldMetadata(alias="userEmail")] = pydantic.Field()
    """
    Email of the user for whom the PAT was created
    """

    name: str = pydantic.Field()
    """
    Name of the Personal Access Token
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
