# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class SparkExecutorDynamicScaling(UniversalBaseModel):
    """
    +label=Dynamic Scaling
    """

    type: typing.Literal["dynamic"] = pydantic.Field(default="dynamic")
    """
    +value=dynamic
    """

    min: int = pydantic.Field()
    """
    +label=Min Instances
    +usage=Minimum number of instances to start / scale down to
    +sort=100
    """

    max: int = pydantic.Field()
    """
    +label=Max Instances
    +usage=Maximum number of instances to scale up to
    +sort=200
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
