# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .azure_content_safety_category import AzureContentSafetyCategory
from .azure_key_auth import AzureKeyAuth


class AzureContentSafetyGuardrailConfig(UniversalBaseModel):
    """
    Azure Content Safety
    """

    name: str = pydantic.Field()
    """
    The name of the Guardrail Config.
    """

    type: typing.Literal["integration/guardrail-config/azure-content-safety"] = pydantic.Field(
        default="integration/guardrail-config/azure-content-safety"
    )
    """
    +uiType=Hidden
    +value=integration/guardrail-config/azure-content-safety
    """

    resource_name: str = pydantic.Field()
    """
    The resource name where API is deployed.
    """

    api_version: str = pydantic.Field(default="2024-09-01")
    """
    API version for the Content Safety API
    """

    custom_host: typing.Optional[str] = pydantic.Field(default=None)
    """
    Custom host for the PII detection API
    """

    blocklist_names: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Array of blocklist names to check against
    """

    severity_threshold: float = pydantic.Field(default=2.0)
    """
    Severity threshold for the Content Safety API
    """

    categories: typing.List[AzureContentSafetyCategory] = pydantic.Field()
    """
    Categories to check against
    """

    auth_data: AzureKeyAuth

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
