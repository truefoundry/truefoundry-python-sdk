# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ClusterType(str, enum.Enum):
    AWS_EKS = "aws-eks"
    GCP_GKE_STANDARD = "gcp-gke-standard"
    AZURE_AKS = "azure-aks"
    GENERIC = "generic"
    CIVO_TALOS = "civo-talos"

    def visit(
        self,
        aws_eks: typing.Callable[[], T_Result],
        gcp_gke_standard: typing.Callable[[], T_Result],
        azure_aks: typing.Callable[[], T_Result],
        generic: typing.Callable[[], T_Result],
        civo_talos: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ClusterType.AWS_EKS:
            return aws_eks()
        if self is ClusterType.GCP_GKE_STANDARD:
            return gcp_gke_standard()
        if self is ClusterType.AZURE_AKS:
            return azure_aks()
        if self is ClusterType.GENERIC:
            return generic()
        if self is ClusterType.CIVO_TALOS:
            return civo_talos()
