# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from .artifact_manifest_source import ArtifactManifestSource
from .base_artifact_version import BaseArtifactVersion


class ArtifactManifest(BaseArtifactVersion):
    """
    +label=Artifact Version
    +usage=Log a new Artifact Version containing files and folders with metadata
    """

    type: typing.Literal["artifact-version"] = "artifact-version"
    source: typing.Optional[ArtifactManifestSource] = pydantic.Field(default=None)
    """
    +label=Artifact Source
    +uiType=Group
    """

    step: typing.Optional[int] = pydantic.Field(default=0)
    """
    +label=Step
    +usage=Step/Epoch number in an iterative training loop the artifact version was created. Generally useful when logging a model version from a MLRepo Run
    +uiProps={"descriptionInline":true}
    """

    run_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    +label=Run ID
    +usage=ID of the MLRepo Run that generated the artifact version
    +uiType=Hidden
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
