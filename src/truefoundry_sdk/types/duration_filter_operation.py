# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class DurationFilterOperation(str, enum.Enum):
    """
    Operation type for duration filter
    """

    GREATER_THAN = ">"
    LESS_THAN = "<"
    EQUAL_TO = "="
    GREATER_THAN_OR_EQUAL_TO = ">="
    LESS_THAN_OR_EQUAL_TO = "<="
    BETWEEN = "BETWEEN"

    def visit(
        self,
        greater_than: typing.Callable[[], T_Result],
        less_than: typing.Callable[[], T_Result],
        equal_to: typing.Callable[[], T_Result],
        greater_than_or_equal_to: typing.Callable[[], T_Result],
        less_than_or_equal_to: typing.Callable[[], T_Result],
        between: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is DurationFilterOperation.GREATER_THAN:
            return greater_than()
        if self is DurationFilterOperation.LESS_THAN:
            return less_than()
        if self is DurationFilterOperation.EQUAL_TO:
            return equal_to()
        if self is DurationFilterOperation.GREATER_THAN_OR_EQUAL_TO:
            return greater_than_or_equal_to()
        if self is DurationFilterOperation.LESS_THAN_OR_EQUAL_TO:
            return less_than_or_equal_to()
        if self is DurationFilterOperation.BETWEEN:
            return between()
