# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import typing
from .subject_type import SubjectType
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Subject(UniversalBaseModel):
    subject_id: typing_extensions.Annotated[str, FieldMetadata(alias="subjectId")]
    subject_type: typing_extensions.Annotated[typing.Optional[SubjectType], FieldMetadata(alias="subjectType")] = None
    subject_slug: typing_extensions.Annotated[str, FieldMetadata(alias="subjectSlug")]
    subject_display_name: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="subjectDisplayName")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
