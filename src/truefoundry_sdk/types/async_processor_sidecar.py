# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class AsyncProcessorSidecar(UniversalBaseModel):
    destination_url: str = pydantic.Field()
    """
    +label=Destination URL
    +usage=URL for the processor to invoke
    """

    request_timeout: typing.Optional[int] = pydantic.Field(default=10)
    """
    +label=Request Timeout Seconds
    +usage=Timeout for the invoke request in seconds
    """

    sidecar_image: typing.Optional[str] = pydantic.Field(default=None)
    """
    +label=Sidecar Image
    +usage=Image for the processor sidecar (This field will be deprecated in the future)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
