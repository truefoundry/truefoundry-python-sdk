# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .data_directory_source import DataDirectorySource


class DataDirectory(UniversalBaseModel):
    """
    +label=Data Directory
    """

    type: typing.Literal["data-dir"] = pydantic.Field(default="data-dir")
    """
    +label=Type
    +value=data-dir
    """

    name: str = pydantic.Field()
    """
    +sort=1
    +label=Name
    +usage=Name of the data directory
    +message=The data directory name should start with lowercase alphabets and can contain alphanumeric and can include '-' in between
    """

    ml_repo: str = pydantic.Field()
    """
    +label=MLRepo
    +usage=Name of the ML Repo to create the data directory under
    +uiType=Hidden
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    +sort=2
    +label=Description
    +usage=Description for the data directory
    """

    metadata: typing.Dict[str, typing.Optional[typing.Any]] = pydantic.Field()
    """
    +label=Metadata
    +usage=Key Value metadata. Should be valid JSON. For e.g. `{"business-unit": "sales", "quality": "good", "rating": 4.5}`
    +uiType=JsonInput
    """

    source: DataDirectorySource = pydantic.Field()
    """
    +label=Data Directory Source
    +uiType=Group
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
