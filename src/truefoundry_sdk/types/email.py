# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class Email(UniversalBaseModel):
    """
    Email
    """

    type: typing.Literal["email"] = pydantic.Field(default="email")
    """
    +value=email
    """

    notification_channel: str = pydantic.Field()
    """
    Specify the notification channel to send alerts to
    """

    to_emails: typing.List[str] = pydantic.Field()
    """
    List of recipients' email addresses if the notification channel is Email.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
