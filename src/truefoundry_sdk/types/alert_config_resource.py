# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .alert_config_resource_type import AlertConfigResourceType


class AlertConfigResource(UniversalBaseModel):
    type: AlertConfigResourceType = pydantic.Field()
    """
    The type of resource this alert config belongs to. Can be either an application or a cluster.
    """

    fqn: str = pydantic.Field()
    """
    FQN of the resource this alert config belongs to.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
