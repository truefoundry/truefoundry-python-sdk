# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import typing_extensions
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Log(UniversalBaseModel):
    job_name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Job Name
    """

    log: str = pydantic.Field()
    """
    Log Content
    """

    stream: str = pydantic.Field()
    """
    Log Stream
    """

    time: str = pydantic.Field()
    """
    Log Time
    """

    container_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="containerName")] = (
        pydantic.Field(default=None)
    )
    """
    Container Name
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
