# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .device_type import DeviceType
import typing_extensions
from .nvidia_gpu_type import NvidiaGpuType
from ..core.serialization import FieldMetadata
import typing
from .device_configuration import DeviceConfiguration
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class DeviceInfo(UniversalBaseModel):
    type: DeviceType
    gpu_type: typing_extensions.Annotated[NvidiaGpuType, FieldMetadata(alias="gpuType")]
    count: int
    configuration: typing.List[DeviceConfiguration]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
