# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class AddonComponentStatus(UniversalBaseModel):
    health_status: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="healthStatus")] = (
        pydantic.Field(default=None)
    )
    """
    Health status of the addon
    """

    sync_status: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="syncStatus")] = pydantic.Field(
        default=None
    )
    """
    Sync status of the addon
    """

    installed: bool = pydantic.Field()
    """
    Indicates whether the addon is installed
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
