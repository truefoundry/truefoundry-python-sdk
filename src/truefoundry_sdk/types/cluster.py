# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .cluster_manifest import ClusterManifest
from .subject import Subject


class Cluster(UniversalBaseModel):
    id: str
    fqn: str
    name: str
    manifest: ClusterManifest
    tenant_name: typing_extensions.Annotated[str, FieldMetadata(alias="tenantName")]
    created_by_subject: typing_extensions.Annotated[
        typing.Optional[Subject], FieldMetadata(alias="createdBySubject")
    ] = None
    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")]
    updated_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="updatedAt")]
    created_by: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="createdBy")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
