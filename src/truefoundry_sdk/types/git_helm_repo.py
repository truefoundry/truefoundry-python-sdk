# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class GitHelmRepo(UniversalBaseModel):
    type: typing.Literal["git-helm-repo"] = pydantic.Field(default="git-helm-repo")
    """
    +value=git-helm-repo
    """

    repo_url: str = pydantic.Field()
    """
    TODO: Check this regex and add guidelines
    +label=Git repository URL
    +sort=1
    +message=Needs to be a valid URL.
    """

    revision: str = pydantic.Field()
    """
    +label=Revision
    +sort=2
    +usage=Branch/Commit SHA/Tag of the git repo.
    """

    path: str = pydantic.Field()
    """
    +label=Path
    +sort=3
    +usage=Path to the chart.
    """

    value_files: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    +label=Value files
    +sort=3
    +usage=Helm values files for overriding values in the helm chart.
    The path is relative to the Path directory defined above
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
