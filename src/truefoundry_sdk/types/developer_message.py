# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .developer_message_content import DeveloperMessageContent


class DeveloperMessage(UniversalBaseModel):
    """
    +label=Developer Message
    +usage=Developer message for the chat
    """

    role: typing.Literal["developer"] = pydantic.Field(default="developer")
    """
    +value=Developer
    +label=Role
    +usage=The role of the messages author, in this case developer.
    """

    content: DeveloperMessageContent = pydantic.Field()
    """
    +label=Content
    +usage=The contents of the developer message.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    +label=Name
    +usage=An optional name for the participant.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
