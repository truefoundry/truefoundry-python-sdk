# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .i_change import IChange
import typing_extensions
from ..core.serialization import FieldMetadata
from .upgrade_data import UpgradeData
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class ApplicationUpgrade(UniversalBaseModel):
    id: str
    application_id: typing_extensions.Annotated[str, FieldMetadata(alias="applicationId")]
    deployment_id: typing_extensions.Annotated[str, FieldMetadata(alias="deploymentId")]
    upgrade_data: typing_extensions.Annotated[UpgradeData, FieldMetadata(alias="upgradeData")]
    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")]
    updated_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="updatedAt")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
