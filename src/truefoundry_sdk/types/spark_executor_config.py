# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .spark_executor_config_instances import SparkExecutorConfigInstances
import pydantic
import typing
from .resources import Resources
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class SparkExecutorConfig(UniversalBaseModel):
    """
    +label=Executor Config
    """

    instances: SparkExecutorConfigInstances = pydantic.Field()
    """
    +label=Executor Instances
    """

    resources: typing.Optional[Resources] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
