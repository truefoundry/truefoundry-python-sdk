# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class SlackBot(UniversalBaseModel):
    type: typing.Literal["slack-bot"] = pydantic.Field(default="slack-bot")
    """
    +value=slack-bot
    """

    notification_channel: str = pydantic.Field()
    """
    +label=Notification Channel
    +usage=Specify the notification channel to send alerts to
    +uiType=AlertNotificationChannel
    +uiProps={"integrationType":"notification-channel"}
    +sort=660
    """

    channels: typing.List[str] = pydantic.Field()
    """
    +label=Slack Channel Names
    +usage=List of channels to send messages to.
    +message=3 to 81 lower case characters long alphanumeric word, may contain - or _ in between, must start with #
    +sort=665
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
