# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class BaseAutoscaling(UniversalBaseModel):
    min_replicas: int = pydantic.Field()
    """
    +label=Minimum replicas
    +usage=Minimum number of replicas to keep available
    +sort=1
    """

    max_replicas: int = pydantic.Field()
    """
    +label=Maximum replicas
    +usage=Maximum number of replicas allowed for the component.
    +sort=2
    """

    polling_interval: typing.Optional[int] = pydantic.Field(default=None)
    """
    +label=Polling Interval
    +usage=This is the interval to check each trigger on.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
