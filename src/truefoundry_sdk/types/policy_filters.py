# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class PolicyFilters(UniversalBaseModel):
    """
    +label=Filters
    """

    cluster_names: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Cluster names where Policy applies
    """

    workspace_names: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Workspace names where Policy applies
    """

    env_names: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Environment names where Policy applies
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
