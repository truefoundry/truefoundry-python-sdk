# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class Jwt(UniversalBaseModel):
    id: str
    subject_type: typing_extensions.Annotated[str, FieldMetadata(alias="subjectType")]
    subject_id: typing_extensions.Annotated[str, FieldMetadata(alias="subjectId")]
    metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    expiry: dt.datetime
    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")]
    updated_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="updatedAt")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
