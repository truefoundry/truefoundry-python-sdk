# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
from .build import Build
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class DeploymentBuild(UniversalBaseModel):
    id: str
    deployment_id: typing_extensions.Annotated[str, FieldMetadata(alias="deploymentId")]
    component_name: typing_extensions.Annotated[str, FieldMetadata(alias="componentName")]
    build: Build
    build_id: typing_extensions.Annotated[str, FieldMetadata(alias="buildId")]
    image_uri: typing_extensions.Annotated[str, FieldMetadata(alias="imageUri")]
    name: str
    status: float
    get_logs_url: typing_extensions.Annotated[str, FieldMetadata(alias="getLogsUrl")]
    tail_logs_url: typing_extensions.Annotated[str, FieldMetadata(alias="tailLogsUrl")]
    logs_start_ts: typing_extensions.Annotated[str, FieldMetadata(alias="logsStartTs")]
    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")]
    updated_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="updatedAt")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
