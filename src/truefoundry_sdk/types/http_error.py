# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import pydantic
import typing
from .http_error_code import HttpErrorCode
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class HttpError(UniversalBaseModel):
    status_code: typing_extensions.Annotated[int, FieldMetadata(alias="statusCode")] = pydantic.Field()
    """
    HTTP Status Code
    """

    message: str = pydantic.Field()
    """
    Error Message
    """

    code: typing.Optional[HttpErrorCode] = pydantic.Field(default=None)
    """
    Error code
    """

    details: typing.Optional[typing.List[typing.Dict[str, typing.Optional[typing.Any]]]] = pydantic.Field(default=None)
    """
    Error details
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
