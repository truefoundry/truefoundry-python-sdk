# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .fallback_rule import FallbackRule


class FallbackConfig(UniversalBaseModel):
    """
    +label=Fallback Configuration
    """

    name: str = pydantic.Field()
    """
    +usage=Name of the fallback configuration
    +uiProps={"descriptionInline":true}
    +sort=1
    +label=Configuration Name
    """

    type: typing.Literal["gateway-fallback-config"] = pydantic.Field(default="gateway-fallback-config")
    """
    +value=gateway-fallback-config
    +sort=2
    """

    rules: typing.List[FallbackRule] = pydantic.Field()
    """
    +usage=List of fallback rules
    +uiProps={"descriptionInline":true}
    +sort=3
    +label=Fallback Rules
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
