# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .collaborator import Collaborator
from .palm_integrations import PalmIntegrations
from .palm_key_auth import PalmKeyAuth


class PalmProviderAccount(UniversalBaseModel):
    """
    PaLM Provider Account
    """

    type: typing.Literal["provider-account/palm"] = pydantic.Field(default="provider-account/palm")
    """
    +value=provider-account/palm
    """

    name: str = pydantic.Field()
    """
    The name of the PaLM provider account
    """

    auth_data: PalmKeyAuth
    integrations: typing.Optional[typing.List[PalmIntegrations]] = pydantic.Field(default=None)
    """
    List of integrations that are associated with the PaLM provider account
    """

    collaborators: typing.Optional[typing.List[Collaborator]] = pydantic.Field(default=None)
    """
    List of users who have access to this provider account
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
