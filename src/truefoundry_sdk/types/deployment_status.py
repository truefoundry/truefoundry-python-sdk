# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
from .deployment_status_status import DeploymentStatusStatus
import typing
from .deployment_status_transition import DeploymentStatusTransition
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class DeploymentStatus(UniversalBaseModel):
    id: str
    deployment_id: typing_extensions.Annotated[str, FieldMetadata(alias="deploymentId")]
    status: DeploymentStatusStatus
    state: typing.Dict[str, typing.Optional[typing.Any]]
    transition: DeploymentStatusTransition
    message: str
    retry_count: typing_extensions.Annotated[float, FieldMetadata(alias="retryCount")]
    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")]
    updated_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="updatedAt")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
