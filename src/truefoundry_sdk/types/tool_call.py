# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .function import Function


class ToolCall(UniversalBaseModel):
    type: typing.Literal["function"] = pydantic.Field(default="function")
    """
    Type of the tool call
    """

    id: str = pydantic.Field()
    """
    Unique identifier for the tool call
    """

    function: Function

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
