# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import typing
from .device_info import DeviceInfo
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class InstanceResources(UniversalBaseModel):
    cpu: float
    memory_mb: typing_extensions.Annotated[int, FieldMetadata(alias="memoryMB")]
    ephemeral_storage_mb: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="ephemeralStorageMB")
    ] = None
    devices: typing.Optional[typing.List[DeviceInfo]] = None
    gpu_count: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="gpuCount")] = None
    gpu_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="gpuType")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
