# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .ml_repo_manifest import MlRepoManifest
from .subject import Subject
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class MlRepoEntity(UniversalBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Experiment Id
    """

    tenant_name: str = pydantic.Field()
    """
    Tenant Name
    """

    manifest: MlRepoManifest
    created_by_subject: Subject
    created_at: dt.datetime = pydantic.Field()
    """
    Created At
    """

    num_runs: typing.Optional[int] = pydantic.Field(default=None)
    """
    Number of runs
    """

    artifact_type_counts: typing.Optional[typing.Dict[str, int]] = None
    datasets_count: typing.Optional[int] = pydantic.Field(default=None)
    """
    Number of datasets
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
