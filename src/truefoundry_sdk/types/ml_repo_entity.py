# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .ml_repo_manifest import MlRepoManifest
from .subject import Subject
import datetime as dt
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class MlRepoEntity(UniversalBaseModel):
    id: str
    tenant_name: str
    manifest: MlRepoManifest
    created_by_subject: Subject
    created_at: dt.datetime
    num_runs: typing.Optional[int] = None
    artifact_type_counts: typing.Optional[typing.Dict[str, int]] = None
    datasets_count: typing.Optional[int] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
