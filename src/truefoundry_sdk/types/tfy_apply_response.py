# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .tfy_apply_response_action import TfyApplyResponseAction
from .tfy_apply_response_existing_manifest import TfyApplyResponseExistingManifest


class TfyApplyResponse(UniversalBaseModel):
    existing_manifest: typing_extensions.Annotated[
        typing.Optional[TfyApplyResponseExistingManifest], FieldMetadata(alias="existingManifest")
    ] = pydantic.Field(default=None)
    """
    The existing manifest of the resource
    """

    action: typing.Optional[TfyApplyResponseAction] = pydantic.Field(default=None)
    """
    The action performed: CREATE or UPDATE
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
