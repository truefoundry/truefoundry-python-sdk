# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ArtifactType(str, enum.Enum):
    """
    An enumeration.
    """

    ARTIFACT = "artifact"
    MODEL = "model"
    PLOT = "plot"
    IMAGE = "image"
    CHAT_PROMPT = "chat_prompt"
    OPENAPI_TOOL = "openapi-tool"
    AGENT = "agent"

    def visit(
        self,
        artifact: typing.Callable[[], T_Result],
        model: typing.Callable[[], T_Result],
        plot: typing.Callable[[], T_Result],
        image: typing.Callable[[], T_Result],
        chat_prompt: typing.Callable[[], T_Result],
        openapi_tool: typing.Callable[[], T_Result],
        agent: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ArtifactType.ARTIFACT:
            return artifact()
        if self is ArtifactType.MODEL:
            return model()
        if self is ArtifactType.PLOT:
            return plot()
        if self is ArtifactType.IMAGE:
            return image()
        if self is ArtifactType.CHAT_PROMPT:
            return chat_prompt()
        if self is ArtifactType.OPENAPI_TOOL:
            return openapi_tool()
        if self is ArtifactType.AGENT:
            return agent()
