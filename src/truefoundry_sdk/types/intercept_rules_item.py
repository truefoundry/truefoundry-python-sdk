# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .header_match import HeaderMatch
from .intercept_rules_item_action import InterceptRulesItemAction


class InterceptRulesItem(UniversalBaseModel):
    port: int = pydantic.Field()
    """
    +docs=Port of service to be intercepted
    +label=Service port
    """

    match: typing.Optional[HeaderMatch] = None
    action: InterceptRulesItemAction = pydantic.Field()
    """
    +docs=Action to take on succesful match
    +label=Action
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
