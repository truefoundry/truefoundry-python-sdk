# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .policy_version import PolicyVersion
from .subject import Subject


class Policy(UniversalBaseModel):
    id: typing.Optional[str] = None
    name: str
    tenant_name: typing_extensions.Annotated[str, FieldMetadata(alias="tenantName")]
    active_version: typing_extensions.Annotated[float, FieldMetadata(alias="activeVersion")]
    active_policy_version: typing_extensions.Annotated[
        typing.Optional[PolicyVersion], FieldMetadata(alias="activePolicyVersion")
    ] = None
    created_by_subject: typing_extensions.Annotated[Subject, FieldMetadata(alias="createdBySubject")]
    created_by: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="createdBy")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
