# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class GuardrailsWhen(UniversalBaseModel):
    subjects: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    +usage=List of subjects that this rule applies to
    """

    models: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    +usage=List of models that this rule applies to
    """

    metadata: typing.Optional[typing.Dict[str, str]] = pydantic.Field(default=None)
    """
    +usage=Metadata key-value pairs that this rule applies to
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
