# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .intercept_rules_item import InterceptRulesItem
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Intercept(UniversalBaseModel):
    type: typing.Literal["intercept"] = pydantic.Field(default="intercept")
    """
    +value=intercept
    """

    name: str = pydantic.Field()
    """
    +sort=1
    +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
    +usage=Name of the service this intercept is for
    """

    rules: typing.List[InterceptRulesItem]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
