# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class WorkflowEvent(str, enum.Enum):
    SUCCEEDED = "SUCCEEDED"
    FAILED = "FAILED"
    ABORTED = "ABORTED"
    TIMED_OUT = "TIMED_OUT"

    def visit(
        self,
        succeeded: typing.Callable[[], T_Result],
        failed: typing.Callable[[], T_Result],
        aborted: typing.Callable[[], T_Result],
        timed_out: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is WorkflowEvent.SUCCEEDED:
            return succeeded()
        if self is WorkflowEvent.FAILED:
            return failed()
        if self is WorkflowEvent.ABORTED:
            return aborted()
        if self is WorkflowEvent.TIMED_OUT:
            return timed_out()
