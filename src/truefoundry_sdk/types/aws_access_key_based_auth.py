# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class AwsAccessKeyBasedAuth(UniversalBaseModel):
    """
    +label=AWS Access Key Based Auth
    """

    type: typing.Literal["access-key-based"] = pydantic.Field(default="access-key-based")
    """
    +value=access-key-based
    """

    access_key_id: str = pydantic.Field()
    """
    +label=AWS access key ID
    +usage=AWS access key ID that you want to use for authentication.
    +sort=100
    +uiType=Password
    """

    secret_access_key: str = pydantic.Field()
    """
    +label=AWS access key secret
    +usage=AWS access key secret that you want to use for authentication.
    +sort=200
    +uiType=Password
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            smart_union = True
            extra = pydantic.Extra.allow
